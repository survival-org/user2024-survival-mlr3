[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Intro to Machine Learning for Survival Analysis with mlr3",
    "section": "",
    "text": "Teaching Aims\n\n\n\n\nUnderstand how {mlr3} is structured\nAccess learners and (built-in) tasks\n\n\n\nTo get started, we load {mlr3verse}, which will load various packages from the {mlr3} ecosystem:\n\n\nCode\nlibrary(mlr3verse)\n\n\n{mlr3} ships with wrappers for many commonly used machine learning algorithms (“learners”).\nWe can access the list of available learners using the mlr_learners dictionary:\n\n\nCode\nsample(mlr_learners$keys(), 10)\n\n\n [1] \"classif.multinom\"    \"regr.kknn\"           \"surv.ctree\"         \n [4] \"classif.featureless\" \"regr.fnn\"            \"surv.cforest\"       \n [7] \"classif.liblinear\"   \"classif.catboost\"    \"classif.ctree\"      \n[10] \"surv.mboost\"        \n\n\nOne example:\n\n\nCode\nlrn(\"classif.ranger\")\n\n\n&lt;LearnerClassifRanger:classif.ranger&gt;\n* Model: -\n* Parameters: num.threads=1\n* Packages: mlr3, mlr3learners, ranger\n* Predict Types:  [response], prob\n* Feature Types: logical, integer, numeric, character, factor, ordered\n* Properties: hotstart_backward, importance, multiclass, oob_error,\n  twoclass, weights\n\n\n\n\n\n\n\n\nNote\n\n\n\nUse lrn(\"classif.ranger\")$help() to view the help page, with links to documentation for parameters and other information about the wrapped learner.\n\n\nBuilt-in tasks can be accessed using the mlr_tasks dictionary:\n\n\nCode\nhead(as.data.table(mlr_tasks)[, list(key, label, task_type, nrow, ncol, properties)])\n\n\nKey: &lt;key&gt;\n              key                     label task_type  nrow  ncol properties\n           &lt;char&gt;                    &lt;char&gt;    &lt;char&gt; &lt;int&gt; &lt;int&gt;     &lt;list&gt;\n1:   ames_housing          Ames House Sales      regr  2930    82           \n2:   bike_sharing       Bike Sharing Demand      regr 17379    14           \n3: boston_housing     Boston Housing Prices      regr   506    18           \n4:  breast_cancer   Wisconsin Breast Cancer   classif   683    10   twoclass\n5:  german_credit             German Credit   classif  1000    21   twoclass\n6:           ilpd Indian Liver Patient Data   classif   583    11   twoclass\n\n\nOne example:\n\n\nCode\ntsk(\"penguins_simple\")\n\n\n&lt;TaskClassif:penguins&gt; (333 x 11): Simplified Palmer Penguins\n* Target: species\n* Properties: multiclass\n* Features (10):\n  - dbl (7): bill_depth, bill_length, island.Biscoe, island.Dream,\n    island.Torgersen, sex.female, sex.male\n  - int (3): body_mass, flipper_length, year\n\n\n\n\n\n\n\n\nNote\n\n\n\nTasks encapsulate a data source (typically a data.table) and additional information regarding which variables are considered features and target. Tasks can also specify additional properties such as stratification, which we will see later."
  },
  {
    "objectID": "index.html#mlr3-basics",
    "href": "index.html#mlr3-basics",
    "title": "Intro to Machine Learning for Survival Analysis with mlr3",
    "section": "",
    "text": "Teaching Aims\n\n\n\n\nUnderstand how {mlr3} is structured\nAccess learners and (built-in) tasks\n\n\n\nTo get started, we load {mlr3verse}, which will load various packages from the {mlr3} ecosystem:\n\n\nCode\nlibrary(mlr3verse)\n\n\n{mlr3} ships with wrappers for many commonly used machine learning algorithms (“learners”).\nWe can access the list of available learners using the mlr_learners dictionary:\n\n\nCode\nsample(mlr_learners$keys(), 10)\n\n\n [1] \"classif.multinom\"    \"regr.kknn\"           \"surv.ctree\"         \n [4] \"classif.featureless\" \"regr.fnn\"            \"surv.cforest\"       \n [7] \"classif.liblinear\"   \"classif.catboost\"    \"classif.ctree\"      \n[10] \"surv.mboost\"        \n\n\nOne example:\n\n\nCode\nlrn(\"classif.ranger\")\n\n\n&lt;LearnerClassifRanger:classif.ranger&gt;\n* Model: -\n* Parameters: num.threads=1\n* Packages: mlr3, mlr3learners, ranger\n* Predict Types:  [response], prob\n* Feature Types: logical, integer, numeric, character, factor, ordered\n* Properties: hotstart_backward, importance, multiclass, oob_error,\n  twoclass, weights\n\n\n\n\n\n\n\n\nNote\n\n\n\nUse lrn(\"classif.ranger\")$help() to view the help page, with links to documentation for parameters and other information about the wrapped learner.\n\n\nBuilt-in tasks can be accessed using the mlr_tasks dictionary:\n\n\nCode\nhead(as.data.table(mlr_tasks)[, list(key, label, task_type, nrow, ncol, properties)])\n\n\nKey: &lt;key&gt;\n              key                     label task_type  nrow  ncol properties\n           &lt;char&gt;                    &lt;char&gt;    &lt;char&gt; &lt;int&gt; &lt;int&gt;     &lt;list&gt;\n1:   ames_housing          Ames House Sales      regr  2930    82           \n2:   bike_sharing       Bike Sharing Demand      regr 17379    14           \n3: boston_housing     Boston Housing Prices      regr   506    18           \n4:  breast_cancer   Wisconsin Breast Cancer   classif   683    10   twoclass\n5:  german_credit             German Credit   classif  1000    21   twoclass\n6:           ilpd Indian Liver Patient Data   classif   583    11   twoclass\n\n\nOne example:\n\n\nCode\ntsk(\"penguins_simple\")\n\n\n&lt;TaskClassif:penguins&gt; (333 x 11): Simplified Palmer Penguins\n* Target: species\n* Properties: multiclass\n* Features (10):\n  - dbl (7): bill_depth, bill_length, island.Biscoe, island.Dream,\n    island.Torgersen, sex.female, sex.male\n  - int (3): body_mass, flipper_length, year\n\n\n\n\n\n\n\n\nNote\n\n\n\nTasks encapsulate a data source (typically a data.table) and additional information regarding which variables are considered features and target. Tasks can also specify additional properties such as stratification, which we will see later."
  },
  {
    "objectID": "index.html#survival-mode-mlr3proba",
    "href": "index.html#survival-mode-mlr3proba",
    "title": "Intro to Machine Learning for Survival Analysis with mlr3",
    "section": "Survival mode: mlr3proba",
    "text": "Survival mode: mlr3proba\n\n\n\n\n\n\nTeaching Aims\n\n\n\n\nUnderstand survival tasks and how they differ from regression/classification\nKnow how to conduct basic modeling with {mlr3proba}\nPrediction types\nSurvival measures\n\n\n\n\n{mlr3proba} extends {mlr3} with survival analysis capabilities. As of now, the package is not on CRAN, but you can install it from GitHub or r-universe. More info is also available on the respective mlr3 book chapter\n\n\nTaskSurv\nWe’ll start by using the built-in lung dataset, which is a survival task with 7 features and 168 observations:\n\n\nCode\nlibrary(mlr3proba)\ntask = tsk(\"lung\")\n\ntask\n\n\n&lt;TaskSurv:lung&gt; (168 x 9): Lung Cancer\n* Target: time, status\n* Properties: -\n* Features (7):\n  - int (6): age, meal.cal, pat.karno, ph.ecog, ph.karno, wt.loss\n  - fct (1): sex\n\n\nSee online reference to useful methods offered by the main TaskSurv class. Some examples:\nTarget Surv object from {survival} (+ denotes censored observation):\n\n\nCode\nhead(task$truth())\n\n\n[1]  455   210  1022+  310   361   218 \n\n\nProportion of censored observations:\n\n\nCode\ntask$cens_prop()\n\n\n[1] 0.2797619\n\n\nDoes the data satisfy the proportional hazards assumption? Get the p-value from the Grambsch-Therneau test:\n\n\nCode\ntask$prop_haz() # barely, p &gt; 0.05 =&gt; PH\n\n\n[1] 0.0608371\n\n\nUsing the autoplot() function from {ggplot2}, we can visualize the task as a Kaplan-Meier curve:\n\n\nCode\nlibrary(ggplot2)\nautoplot(task) +\n  labs(title = \"Lung dataset: Kaplan-Meier curve\")\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\n\n\n\nTasks shipped with {mlr3proba}:\n\n\nCode\nas.data.table(mlr_tasks)[task_type == \"surv\", list(key, label, nrow, ncol)]\n\n\nKey: &lt;key&gt;\n             key                       label  nrow  ncol\n          &lt;char&gt;                      &lt;char&gt; &lt;int&gt; &lt;int&gt;\n 1:         actg                    ACTG 320  1151    13\n 2:         gbcs        German Breast Cancer   686    10\n 3:         gbsg        German Breast Cancer   686    10\n 4:        grace                  GRACE 1000  1000     8\n 5:         lung                 Lung Cancer   168     9\n 6:         mgus                        MGUS   176     9\n 7:          pbc Primary Biliary Cholangitis   276    19\n 8:         rats                        Rats   300     5\n 9: unemployment       Unemployment Duration  3343     6\n10:      veteran                     Veteran   137     8\n11:         whas      Worcester Heart Attack   481    11\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nUse as_task_surv() to convert your own datasets to a TaskSurv object\nTry tsk(\"lung\")$help() to get more info about the dataset and pre-processing applied\n\n\n\n\n\nCoxPH learner\nThe classical Cox Proportional Hazards model:\n\n\nCode\ncox = lrn(\"surv.coxph\")\ncox\n\n\n&lt;LearnerSurvCoxPH:surv.coxph&gt;: Cox Proportional Hazards\n* Model: -\n* Parameters: list()\n* Packages: mlr3, mlr3proba, survival, distr6\n* Predict Types:  [crank], distr, lp\n* Feature Types: logical, integer, numeric, factor\n* Properties: weights\n\n\nAssess the fit object from survival package:\n\n\nCode\npart = partition(task, ratio = 0.8) # by default, stratification is on `status` variable\ncox$train(task, row_ids = part$train)\n\ncox$model\n\n\nCall:\nsurvival::coxph(formula = task$formula(), data = task$data(), \n    x = TRUE)\n\n                coef  exp(coef)   se(coef)      z       p\nage        8.660e-03  1.009e+00  1.428e-02  0.607 0.54413\nmeal.cal  -2.624e-05  1.000e+00  2.827e-04 -0.093 0.92605\npat.karno -1.157e-02  9.885e-01  9.361e-03 -1.236 0.21637\nph.ecog    7.933e-01  2.211e+00  2.481e-01  3.197 0.00139\nph.karno   2.587e-02  1.026e+00  1.276e-02  2.027 0.04267\nsexm       4.506e-01  1.569e+00  2.293e-01  1.965 0.04940\nwt.loss   -1.196e-02  9.881e-01  8.542e-03 -1.400 0.16163\n\nLikelihood ratio test=22.26  on 7 df, p=0.002289\nn= 135, number of events= 97 \n\n\n\n\nPrediction types\nLet’s predict using the trained cox model on the test set (output is a PredictionSurv object):\n\n\nCode\np = cox$predict(task, row_ids = part$test)\np\n\n\n&lt;PredictionSurv&gt; for 33 observations:\n    row_ids time status       crank          lp     distr\n          2  210   TRUE  0.89192026  0.89192026 &lt;list[1]&gt;\n         14   81   TRUE -0.05185060 -0.05185060 &lt;list[1]&gt;\n         18  118   TRUE  1.59377807  1.59377807 &lt;list[1]&gt;\n---                                                      \n        161  211  FALSE  1.29941300  1.29941300 &lt;list[1]&gt;\n        166  105  FALSE  0.57377693  0.57377693 &lt;list[1]&gt;\n        168  177  FALSE -0.02200535 -0.02200535 &lt;list[1]&gt;\n\n\n\n\n\n\n\n\nPrediction types in mlr3proba\n\n\n\n\ncrank: Continuous risk ranking.\nlp: Linear predictor calculated as \\hat\\beta * X_{test}.\ndistr: Predicted survival distribution, either discrete or continuous.\nresponse - Predicted survival time.\n\n\n\nFor the cox model, crank = lp (the higher, the more risk):\n\n\nCode\np$lp\n\n\n          1           2           3           4           5           6 \n 0.89192026 -0.05185060  1.59377807  0.87181829  1.05538123 -0.03017341 \n          7           8           9          10          11          12 \n 0.43982533  0.35550706 -0.44163195  0.12168874  0.21170189  0.22489930 \n         13          14          15          16          17          18 \n 0.62746459  0.33536557  0.43246248  0.48233426  0.15120945  1.17668321 \n         19          20          21          22          23          24 \n 1.24340107  0.74097076  0.82725564 -0.10958164  0.68518874  0.93041409 \n         25          26          27          28          29          30 \n-0.25437074  0.30055500  0.41206353  0.95639509 -0.26276598  0.76506456 \n         31          32          33 \n 1.29941300  0.57377693 -0.02200535 \n\n\nSurvival prediction is a 2D matrix essentially =&gt; (test) observations x time points:\n\n\nCode\np$data$distr[1:5, 1:5]\n\n\n          5        11        12        13        15\n1 0.9882969 0.9766833 0.9650566 0.9533490 0.9416028\n2 0.9954293 0.9908607 0.9862536 0.9815800 0.9768557\n3 0.9765295 0.9535166 0.9307548 0.9081148 0.8856829\n4 0.9885284 0.9771420 0.9657400 0.9542558 0.9427311\n5 0.9862330 0.9726000 0.9589803 0.9452952 0.9315951\n\n\nVia the distr6 interface, we can get for survival probabilities (or hazards):\n\n\nCode\n# first 4 patients in the test set, specific time points:\np$distr[1:4]$survival(c(100, 500, 1200))\n\n\n            [,1]      [,2]         [,3]        [,4]\n100  0.768018099 0.9023841 5.871340e-01 0.772062945\n500  0.121567522 0.4404025 1.424367e-02 0.126774195\n1200 0.004466405 0.1217484 1.814666e-05 0.004974242\n\n\n\n\nModel evaluation\n\n\n\n\n\n\nModel validation\n\n\n\nValidation of a survival model can be done by assessing:\n\nDiscrimination: the ability of the model to distinguish between low and high risk patients\nCalibration: the agreement between the observed and predicted survival probabilities\nOverall performance: the distance between the observed and predicted survival probabilities\n\n\n\nMany measures included in mlr3proba:\n\n\nCode\nmlr_measures$keys(pattern = \"surv\")\n\n\n [1] \"surv.brier\"         \"surv.calib_alpha\"   \"surv.calib_beta\"   \n [4] \"surv.chambless_auc\" \"surv.cindex\"        \"surv.dcalib\"       \n [7] \"surv.graf\"          \"surv.hung_auc\"      \"surv.intlogloss\"   \n[10] \"surv.logloss\"       \"surv.mae\"           \"surv.mse\"          \n[13] \"surv.nagelk_r2\"     \"surv.oquigley_r2\"   \"surv.rcll\"         \n[16] \"surv.rmse\"          \"surv.schmid\"        \"surv.song_auc\"     \n[19] \"surv.song_tnr\"      \"surv.song_tpr\"      \"surv.uno_auc\"      \n[22] \"surv.uno_tnr\"       \"surv.uno_tpr\"       \"surv.xu_r2\"        \n\n\nMost commonly used metrics are for assessing discrimination, such as Harrell’s C-index, Uno’s C-index and the time-dependent AUC:\n\n\nCode\nharrell_c = msr(\"surv.cindex\", id = \"surv.cindex.harrell\")\nuno_c = msr(\"surv.cindex\", weight_meth = \"G2\")\nuno_auci = msr(\"surv.uno_auc\", integrated = TRUE) # across all times in the test set\nuno_auc = msr(\"surv.uno_auc\", integrated = FALSE, times = 10) # at a specific time-point of interest\n\nharrell_c\n\n\n&lt;MeasureSurvCindex:surv.cindex.harrell&gt;\n* Packages: mlr3, mlr3proba\n* Range: [0, 1]\n* Minimize: FALSE\n* Average: macro\n* Parameters: weight_meth=I, tiex=0.5, eps=0.001\n* Properties: -\n* Predict type: crank\n* Return type: Score\n\n\nCode\nuno_auc\n\n\n&lt;MeasureSurvUnoAUC:surv.uno_auc&gt;\n* Packages: mlr3, mlr3proba, survAUC\n* Range: [0, 1]\n* Minimize: FALSE\n* Average: macro\n* Parameters: integrated=FALSE, times=10\n* Properties: requires_task, requires_train_set\n* Predict type: lp\n* Return type: Score\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nNot all measures are applicable to all models! Prediction type matters!\n\n\n\n\n\nCode\np$score(harrell_c)\n\n\nsurv.cindex.harrell \n          0.6412777 \n\n\nCode\np$score(uno_c, task = task, train_set = part$train)\n\n\nsurv.cindex \n  0.6047453 \n\n\nCalibration (D-calibration) - calibration plot (via mlr3)\nScoring rules (discrimination + calibration): Brier Score, IBS, RCLL, ERV versions\n\n\nMore survival learners\nmlr3extralearners: cv.glmnet, aorsf, ranger"
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "",
    "section": "",
    "text": "Attribution 4.0 International\n=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public: \nwiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "index.html#example-train-predict-evaluate",
    "href": "index.html#example-train-predict-evaluate",
    "title": "Intro to Machine Learning for Survival Analysis with mlr3",
    "section": "Example: Train-Predict-Evaluate",
    "text": "Example: Train-Predict-Evaluate\n\n\n\n\n\n\nTeaching Aims\n\n\n\n\nPerform a simple train-predict-evaluate step\nUse built-in classification task and learner\n\n\n\nThe below code snippet trains a random forest model on the penguins_simple task (a simplified version of the palmerpenguins dataset, but without missing values) and evaluates the model’s performance using the classification error metric:\n\n\nCode\ntask = tsk(\"penguins_simple\")\nlearner = lrn(\"classif.ranger\", num.trees = 10)\n\npart = partition(task, ratio = 0.8) # by default stratifies on the target column\n\nlearner$train(task, row_ids = part$train)\npreds = learner$predict(task, row_ids = part$test)\npreds$score(msr(\"classif.ce\"))\n\n\nclassif.ce \n         0"
  },
  {
    "objectID": "index.html#gex-clinical-data-example",
    "href": "index.html#gex-clinical-data-example",
    "title": "Intro to Machine Learning for Survival Analysis with mlr3",
    "section": "GEX + clinical data example",
    "text": "GEX + clinical data example\n\nFrom the tutorial\nBenchmark + posthoc analysis of results"
  },
  {
    "objectID": "index.html#mlr3proba-survival-mode",
    "href": "index.html#mlr3proba-survival-mode",
    "title": "Intro to Machine Learning for Survival Analysis with mlr3",
    "section": "mlr3proba: survival mode",
    "text": "mlr3proba: survival mode\n\n\n\n\n\n\nTeaching Aims\n\n\n\n\nUnderstand survival tasks and how they differ from regression/classification\nKnow how to conduct basic modeling with {mlr3proba}\nPrediction types\nSurvival measures\n\n\n\n\n{mlr3proba} extends {mlr3} with survival analysis capabilities. As of now, the package is not on CRAN, but you can install it from GitHub or r-universe. More info is also available on the respective mlr3 book chapter\n\n\nSurvival Tasks\nWe’ll start by using the built-in lung dataset, which is a survival task with 7 features and 168 observations:\n\n\nCode\nlibrary(mlr3proba)\ntask = tsk(\"lung\")\n\ntask\n\n\n&lt;TaskSurv:lung&gt; (168 x 9): Lung Cancer\n* Target: time, status\n* Properties: -\n* Features (7):\n  - int (6): age, meal.cal, pat.karno, ph.ecog, ph.karno, wt.loss\n  - fct (1): sex\n\n\nSee online reference to useful methods offered by the main TaskSurv class. Some examples:\nTarget Surv object from {survival} (+ denotes censored observation):\n\n\nCode\nhead(task$truth())\n\n\n[1]  455   210  1022+  310   361   218 \n\n\nProportion of censored observations:\n\n\nCode\ntask$cens_prop()\n\n\n[1] 0.2797619\n\n\nDoes the data satisfy the proportional hazards assumption? Get the p-value from the Grambsch-Therneau test:\n\n\nCode\ntask$prop_haz() # barely, p &gt; 0.05 =&gt; PH\n\n\n[1] 0.0608371\n\n\nUsing the autoplot() function from {ggplot2}, we can visualize the task as a Kaplan-Meier curve:\n\n\nCode\nlibrary(ggplot2)\nautoplot(task) +\n  labs(title = \"Lung dataset: Kaplan-Meier curve\")\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\n\n\n\nTasks shipped with {mlr3proba}:\n\n\nCode\nas.data.table(mlr_tasks)[task_type == \"surv\", list(key, label, nrow, ncol)]\n\n\nKey: &lt;key&gt;\n             key                       label  nrow  ncol\n          &lt;char&gt;                      &lt;char&gt; &lt;int&gt; &lt;int&gt;\n 1:         actg                    ACTG 320  1151    13\n 2:         gbcs        German Breast Cancer   686    10\n 3:         gbsg        German Breast Cancer   686    10\n 4:        grace                  GRACE 1000  1000     8\n 5:         lung                 Lung Cancer   168     9\n 6:         mgus                        MGUS   176     9\n 7:          pbc Primary Biliary Cholangitis   276    19\n 8:         rats                        Rats   300     5\n 9: unemployment       Unemployment Duration  3343     6\n10:      veteran                     Veteran   137     8\n11:         whas      Worcester Heart Attack   481    11\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nUse as_task_surv() to convert your own datasets to a TaskSurv object\nTry tsk(\"lung\")$help() to get more info about the dataset and pre-processing applied\n\n\n\n\n\nCoxPH learner\nThe classical Cox Proportional Hazards model:\n\n\nCode\ncox = lrn(\"surv.coxph\")\ncox\n\n\n&lt;LearnerSurvCoxPH:surv.coxph&gt;: Cox Proportional Hazards\n* Model: -\n* Parameters: list()\n* Packages: mlr3, mlr3proba, survival, distr6\n* Predict Types:  [crank], distr, lp\n* Feature Types: logical, integer, numeric, factor\n* Properties: weights\n\n\nAssess the fit object from survival package:\n\n\nCode\npart = partition(task, ratio = 0.8) # by default, stratification is on `status` variable\ncox$train(task, row_ids = part$train)\n\ncox$model\n\n\nCall:\nsurvival::coxph(formula = task$formula(), data = task$data(), \n    x = TRUE)\n\n                coef  exp(coef)   se(coef)      z       p\nage        9.082e-03  1.009e+00  1.314e-02  0.691 0.48959\nmeal.cal   2.887e-05  1.000e+00  3.176e-04  0.091 0.92758\npat.karno -1.350e-02  9.866e-01  9.395e-03 -1.437 0.15064\nph.ecog    6.830e-01  1.980e+00  2.589e-01  2.639 0.00833\nph.karno   2.330e-02  1.024e+00  1.277e-02  1.824 0.06813\nsexm       3.778e-01  1.459e+00  2.258e-01  1.673 0.09431\nwt.loss   -1.046e-02  9.896e-01  9.625e-03 -1.087 0.27719\n\nLikelihood ratio test=18.23  on 7 df, p=0.01099\nn= 135, number of events= 97 \n\n\n\n\nPrediction types\nLet’s predict using the trained cox model on the test set (output is a PredictionSurv object):\n\n\nCode\np = cox$predict(task, row_ids = part$test)\np\n\n\n&lt;PredictionSurv&gt; for 33 observations:\n    row_ids time status       crank          lp     distr\n          2  210   TRUE  0.78362250  0.78362250 &lt;list[1]&gt;\n          6  218   TRUE -0.05043260 -0.05043260 &lt;list[1]&gt;\n          9  567   TRUE -0.05505407 -0.05505407 &lt;list[1]&gt;\n---                                                      \n        154  235  FALSE -0.30104090 -0.30104090 &lt;list[1]&gt;\n        156  252  FALSE -0.30520403 -0.30520403 &lt;list[1]&gt;\n        163  197  FALSE  0.34060601  0.34060601 &lt;list[1]&gt;\n\n\n\n\n\n\n\n\nPrediction types in mlr3proba\n\n\n\n\ncrank: Continuous risk ranking.\nlp: Linear predictor calculated as \\hat\\beta * X_{test}.\ndistr: Predicted survival distribution, either discrete or continuous.\nresponse - Predicted survival time.\n\n\n\nFor the cox model, crank = lp (the higher, the more risk):\n\n\nCode\np$lp\n\n\n          1           2           3           4           5           6 \n 0.78362250 -0.05043260 -0.05505407  0.23161369  0.08774597 -0.12394717 \n          7           8           9          10          11          12 \n 0.34359240 -0.16003443 -0.24939474 -0.11616507  1.08907520  1.03930686 \n         13          14          15          16          17          18 \n-0.25278437  0.31964127  0.08452458 -0.04672651  1.39443209  0.73284231 \n         19          20          21          22          23          24 \n-0.24158608  0.62666538 -0.30574729  0.24002655  0.23128934  0.79450396 \n         25          26          27          28          29          30 \n-0.29141177  0.51193290 -0.62174151  0.46894192 -0.33111085 -0.86862004 \n         31          32          33 \n-0.30104090 -0.30520403  0.34060601 \n\n\nSurvival prediction is a 2D matrix essentially =&gt; (test) observations x time points:\n\n\nCode\np$data$distr[1:5, 1:5]\n\n\n          5        11        12        13        15\n1 0.9886909 0.9774623 0.9662404 0.9549563 0.9436524\n2 0.9950728 0.9901491 0.9851962 0.9801830 0.9751272\n3 0.9950955 0.9901943 0.9852639 0.9802734 0.9752404\n4 0.9934726 0.9869603 0.9804200 0.9738110 0.9671570\n5 0.9943448 0.9886977 0.9830213 0.9772801 0.9714945\n\n\nVia the distr6 interface, we can get for survival probabilities (or hazards):\n\n\nCode\n# first 4 patients in the test set, specific time points:\np$distr[1:4]$survival(c(100, 500, 1200))\n\n\n            [,1]      [,2]      [,3]       [,4]\n100  0.766926425 0.8911490 0.8916226 0.85830591\n500  0.110124218 0.3836228 0.3853213 0.28075261\n1200 0.008892694 0.1286165 0.1298385 0.06592799\n\n\n\n\nModel evaluation\n\n\n\n\n\n\nModel validation\n\n\n\nValidation of a survival model can be done by assessing:\n\nDiscrimination: the ability of the model to distinguish between low and high risk patients\nCalibration: the agreement between the observed and predicted survival probabilities\nOverall performance: the distance between the observed and predicted survival probabilities\n\n\n\nMany measures included in mlr3proba:\n\n\nCode\nmlr_measures$keys(pattern = \"surv\")\n\n\n [1] \"surv.brier\"         \"surv.calib_alpha\"   \"surv.calib_beta\"   \n [4] \"surv.chambless_auc\" \"surv.cindex\"        \"surv.dcalib\"       \n [7] \"surv.graf\"          \"surv.hung_auc\"      \"surv.intlogloss\"   \n[10] \"surv.logloss\"       \"surv.mae\"           \"surv.mse\"          \n[13] \"surv.nagelk_r2\"     \"surv.oquigley_r2\"   \"surv.rcll\"         \n[16] \"surv.rmse\"          \"surv.schmid\"        \"surv.song_auc\"     \n[19] \"surv.song_tnr\"      \"surv.song_tpr\"      \"surv.uno_auc\"      \n[22] \"surv.uno_tnr\"       \"surv.uno_tpr\"       \"surv.xu_r2\"        \n\n\nMost commonly used metrics are for assessing discrimination, such as Harrell’s C-index, Uno’s C-index and the time-dependent AUC:\n\n\nCode\nharrell_c = msr(\"surv.cindex\", id = \"surv.cindex.harrell\")\nuno_c = msr(\"surv.cindex\", weight_meth = \"G2\")\nuno_auci = msr(\"surv.uno_auc\", integrated = TRUE) # across all times in the test set\nuno_auc = msr(\"surv.uno_auc\", integrated = FALSE, times = 10) # at a specific time-point of interest\n\nharrell_c\n\n\n&lt;MeasureSurvCindex:surv.cindex.harrell&gt;\n* Packages: mlr3, mlr3proba\n* Range: [0, 1]\n* Minimize: FALSE\n* Average: macro\n* Parameters: weight_meth=I, tiex=0.5, eps=0.001\n* Properties: -\n* Predict type: crank\n* Return type: Score\n\n\nCode\nuno_auc\n\n\n&lt;MeasureSurvUnoAUC:surv.uno_auc&gt;\n* Packages: mlr3, mlr3proba, survAUC\n* Range: [0, 1]\n* Minimize: FALSE\n* Average: macro\n* Parameters: integrated=FALSE, times=10\n* Properties: requires_task, requires_train_set\n* Predict type: lp\n* Return type: Score\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nNot all measures are applicable to all models! Prediction type matters!\n\n\n\n\n\nCode\np$score(harrell_c)\n\n\nsurv.cindex.harrell \n          0.7028986 \n\n\nCode\np$score(uno_c, task = task, train_set = part$train)\n\n\nsurv.cindex \n  0.6961161 \n\n\nCalibration (D-calibration) - calibration plot (via mlr3)\nScoring rules (discrimination + calibration): Brier Score, IBS, RCLL, ERV versions\n\n\nMore survival learners\nmlr3extralearners: cv.glmnet, aorsf, ranger"
  },
  {
    "objectID": "index.html#mlr3proba-basics",
    "href": "index.html#mlr3proba-basics",
    "title": "Intro to Machine Learning for Survival Analysis with mlr3",
    "section": "mlr3proba: Basics",
    "text": "mlr3proba: Basics\n\n\n\n\n\n\nTeaching Aims\n\n\n\n\nUnderstand survival tasks and how they differ from regression/classification\nKnow how to conduct basic modeling with {mlr3proba}\nPrediction types\nSurvival measures\n\n\n\n{mlr3proba} extends {mlr3} with survival analysis capabilities.\n\n\n\n\n\n\nImportant\n\n\n\nAs of now, {mlr3proba} is not on CRAN, but you can install it from GitHub or r-universe. More info is also available on the respective mlr3 book chapter.\n\n\n\nSurvival Tasks\nWe’ll start by using the built-in lung dataset, which is a survival task with 7 features and 168 observations:\n\n\nCode\nlibrary(mlr3proba)\ntask = tsk(\"lung\")\n\ntask\n\n\n&lt;TaskSurv:lung&gt; (168 x 9): Lung Cancer\n* Target: time, status\n* Properties: -\n* Features (7):\n  - int (6): age, meal.cal, pat.karno, ph.ecog, ph.karno, wt.loss\n  - fct (1): sex\n\n\nSee online reference to useful methods offered by the main TaskSurv class. Some examples:\nTarget Surv object from {survival} (+ denotes censored observation):\n\n\nCode\nhead(task$truth())\n\n\n[1]  455   210  1022+  310   361   218 \n\n\nProportion of censored observations:\n\n\nCode\ntask$cens_prop()\n\n\n[1] 0.2797619\n\n\nDoes the data satisfy the proportional hazards assumption? Get the p-value from the Grambsch-Therneau test:\n\n\nCode\ntask$prop_haz() # barely, p &gt; 0.05 =&gt; PH\n\n\n[1] 0.0608371\n\n\nUsing the autoplot() function from {ggplot2}, we get the Kaplan-Meier curve:\n\n\nCode\nlibrary(ggplot2)\nautoplot(task) +\n  labs(title = \"Lung dataset: Kaplan-Meier curve\")\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\n\n\n\nTasks shipped with {mlr3proba}:\n\n\nCode\nas.data.table(mlr_tasks)[task_type == \"surv\", list(key, label, nrow, ncol)]\n\n\nKey: &lt;key&gt;\n             key                       label  nrow  ncol\n          &lt;char&gt;                      &lt;char&gt; &lt;int&gt; &lt;int&gt;\n 1:         actg                    ACTG 320  1151    13\n 2:         gbcs        German Breast Cancer   686    10\n 3:         gbsg        German Breast Cancer   686    10\n 4:        grace                  GRACE 1000  1000     8\n 5:         lung                 Lung Cancer   168     9\n 6:         mgus                        MGUS   176     9\n 7:          pbc Primary Biliary Cholangitis   276    19\n 8:         rats                        Rats   300     5\n 9: unemployment       Unemployment Duration  3343     6\n10:      veteran                     Veteran   137     8\n11:         whas      Worcester Heart Attack   481    11\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nUse as_task_surv() to convert your own datasets to a TaskSurv object\nTry tsk(\"lung\")$help() to get more info about the dataset and pre-processing applied\n\n\n\n\n\nCoxPH learner\nThe classical Cox Proportional Hazards model:\n\n\nCode\ncox = lrn(\"surv.coxph\")\ncox\n\n\n&lt;LearnerSurvCoxPH:surv.coxph&gt;: Cox Proportional Hazards\n* Model: -\n* Parameters: list()\n* Packages: mlr3, mlr3proba, survival, distr6\n* Predict Types:  [crank], distr, lp\n* Feature Types: logical, integer, numeric, factor\n* Properties: weights\n\n\nTrain the cox model and access the fit object from the {survival} package:\n\n\nCode\npart = partition(task, ratio = 0.8) # by default, stratification is on `status` variable\ncox$train(task, row_ids = part$train)\n\ncox$model\n\n\nCall:\nsurvival::coxph(formula = task$formula(), data = task$data(), \n    x = TRUE)\n\n                coef  exp(coef)   se(coef)      z        p\nage        1.289e-02  1.013e+00  1.259e-02  1.024 0.305800\nmeal.cal  -8.302e-05  9.999e-01  2.869e-04 -0.289 0.772319\npat.karno -7.476e-03  9.926e-01  9.091e-03 -0.822 0.410844\nph.ecog    9.047e-01  2.471e+00  2.615e-01  3.460 0.000539\nph.karno   2.841e-02  1.029e+00  1.256e-02  2.261 0.023754\nsexm       7.011e-01  2.016e+00  2.251e-01  3.114 0.001843\nwt.loss   -1.258e-02  9.875e-01  8.715e-03 -1.444 0.148728\n\nLikelihood ratio test=26.97  on 7 df, p=0.0003374\nn= 135, number of events= 97 \n\n\n\n\nPrediction types\nLet’s predict using the trained cox model on the test set (output is a PredictionSurv object):\n\n\nCode\np = cox$predict(task, row_ids = part$test)\np\n\n\n&lt;PredictionSurv&gt; for 33 observations:\n    row_ids time status       crank          lp     distr\n          1  455   TRUE -0.02981212 -0.02981212 &lt;list[1]&gt;\n          6  218   TRUE  0.20870613  0.20870613 &lt;list[1]&gt;\n         10  613   TRUE  1.08385929  1.08385929 &lt;list[1]&gt;\n---                                                      \n        154  235  FALSE -0.25508919 -0.25508919 &lt;list[1]&gt;\n        162  175  FALSE -0.99021501 -0.99021501 &lt;list[1]&gt;\n        163  197  FALSE  0.71869698  0.71869698 &lt;list[1]&gt;\n\n\n\n\n\n\n\n\nPrediction types in mlr3proba\n\n\n\n\ncrank: Continuous risk ranking\nlp: Linear predictor calculated as \\hat\\beta * X_{test}\ndistr: Predicted survival distribution, either discrete or continuous\nresponse: Predicted survival time\n\n\n\nFor the cox model, crank = lp (the higher, the more risk):\n\n\nCode\np$lp\n\n\n          1           2           3           4           5           6 \n-0.02981212  0.20870613  1.08385929  0.64412898  1.95694166  1.29258294 \n          7           8           9          10          11          12 \n 0.98118477  0.50306284  0.28943104  0.01861849  0.17463572 -0.16547567 \n         13          14          15          16          17          18 \n 0.05779670  0.69083172  0.88189677  0.29579355  0.96685391  1.18925249 \n         19          20          21          22          23          24 \n 1.57195467  1.07787218  1.01452642  0.42097551  1.06133443  1.10591812 \n         25          26          27          28          29          30 \n 0.40184129  0.90670656 -0.58224140  0.79403675  0.22297187  0.32272039 \n         31          32          33 \n-0.25508919 -0.99021501  0.71869698 \n\n\nSurvival prediction is a 2D matrix essentially, with dimensions: observations x time points:\n\n\nCode\np$data$distr[1:5, 1:5]\n\n\n          5        11        12        13        15\n1 0.9960952 0.9921929 0.9882408 0.9842226 0.9801466\n2 0.9950460 0.9901004 0.9850969 0.9800154 0.9748665\n3 0.9881552 0.9764127 0.9646160 0.9527207 0.9407553\n4 0.9923533 0.9847403 0.9770594 0.9692804 0.9614206\n5 0.9718741 0.9444511 0.9173608 0.8905079 0.8639642\n\n\nUsers should use the distr6 interface to access this prediction type, which allows us to retrieve survival probabilities (or hazards) for any time point of interest:\n\n\nCode\n# first 4 patients in the test set, specific time points:\np$distr[1:4]$survival(c(100, 500, 1200))\n\n\n          [,1]       [,2]        [,3]       [,4]\n100  0.9014317 0.87658337 0.729032803 0.81579356\n500  0.4645821 0.37790283 0.096835009 0.22222443\n1200 0.1600068 0.09766965 0.003768671 0.02745085\n\n\n\n\nModel evaluation\n\n\n\n\n\n\nModel validation\n\n\n\nValidation of a survival model can be done by assessing:\n\nDiscrimination: the ability of the model to distinguish between low and high risk patients\nCalibration: the agreement between the observed and predicted survival probabilities\nOverall performance: the distance between the observed and predicted survival probabilities\n\n\n\nMany measures included in mlr3proba:\n\n\nCode\nmlr_measures$keys(pattern = \"surv\")\n\n\n [1] \"surv.brier\"         \"surv.calib_alpha\"   \"surv.calib_beta\"   \n [4] \"surv.chambless_auc\" \"surv.cindex\"        \"surv.dcalib\"       \n [7] \"surv.graf\"          \"surv.hung_auc\"      \"surv.intlogloss\"   \n[10] \"surv.logloss\"       \"surv.mae\"           \"surv.mse\"          \n[13] \"surv.nagelk_r2\"     \"surv.oquigley_r2\"   \"surv.rcll\"         \n[16] \"surv.rmse\"          \"surv.schmid\"        \"surv.song_auc\"     \n[19] \"surv.song_tnr\"      \"surv.song_tpr\"      \"surv.uno_auc\"      \n[22] \"surv.uno_tnr\"       \"surv.uno_tpr\"       \"surv.xu_r2\"        \n\n\nMost commonly used metrics are for assessing discrimination, such as Harrell’s C-index, Uno’s C-index and the (time-dependent) AUC:\n\n\nCode\nharrell_c = msr(\"surv.cindex\", id = \"surv.cindex.harrell\")\nuno_c = msr(\"surv.cindex\", weight_meth = \"G2\")\nuno_auci = msr(\"surv.uno_auc\", integrated = TRUE) # across all times in the test set\nuno_auc = msr(\"surv.uno_auc\", integrated = FALSE, times = 10) # at a specific time-point of interest\n\nharrell_c\n\n\n&lt;MeasureSurvCindex:surv.cindex.harrell&gt;\n* Packages: mlr3, mlr3proba\n* Range: [0, 1]\n* Minimize: FALSE\n* Average: macro\n* Parameters: weight_meth=I, tiex=0.5, eps=0.001\n* Properties: -\n* Predict type: crank\n* Return type: Score\n\n\nCode\nuno_auc\n\n\n&lt;MeasureSurvUnoAUC:surv.uno_auc&gt;\n* Packages: mlr3, mlr3proba, survAUC\n* Range: [0, 1]\n* Minimize: FALSE\n* Average: macro\n* Parameters: integrated=FALSE, times=10\n* Properties: requires_task, requires_train_set\n* Predict type: lp\n* Return type: Score\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nNot all measures are applicable to all models - prediction type matters!\nMost discrimination metrics use the crank or lp prediction\n\n\n\n\n\nCode\np$score(harrell_c)\n\n\nsurv.cindex.harrell \n          0.6458333 \n\n\nCode\np$score(uno_c, task = task, train_set = part$train)\n\n\nsurv.cindex \n  0.5906947 \n\n\nCalibration is traditionally performed graphically via calibration plots:\n\n\nCode\nautoplot(p, type = \"calib\", task = task, row_ids = part$test)\n\n\n\n\n\nBut there exists also calibration metrics, e.g. D-Calibration:\n\n\nCode\ndcal = msr(\"surv.dcalib\")\ndcal\n\n\n&lt;MeasureSurvDCalibration:surv.dcalib&gt;\n* Packages: mlr3, mlr3proba\n* Range: [0, Inf]\n* Minimize: TRUE\n* Average: macro\n* Parameters: B=10, chisq=FALSE, truncate=Inf\n* Properties: -\n* Predict type: distr\n* Return type: Score\n\n\nCode\np$score(dcal)\n\n\nsurv.dcalib \n   7.117245 \n\n\nOverall survival prediction performance can be assessed by scoring rules such as the Integrated Survival Brier Score (ISBS) and the Right-censored Log-Loss (RCLL) among others:\n\n\nCode\nrcll = msr(\"surv.rcll\")\nrcll\n\n\n&lt;MeasureSurvRCLL:surv.rcll&gt;\n* Packages: mlr3, mlr3proba, distr6\n* Range: [0, Inf]\n* Minimize: TRUE\n* Average: macro\n* Parameters: eps=1e-15, se=FALSE, ERV=FALSE, na.rm=TRUE\n* Properties: -\n* Predict type: distr\n* Return type: Score\n\n\nCode\np$score(rcll)\n\n\nsurv.rcll \n 22.50585 \n\n\n\n\nCode\nibrier = msr(\"surv.brier\", proper = TRUE)\nibrier\n\n\n&lt;MeasureSurvGraf:surv.graf&gt;\n* Packages: mlr3, mlr3proba\n* Range: [0, Inf]\n* Minimize: TRUE\n* Average: macro\n* Parameters: integrated=TRUE, method=2, se=FALSE, proper=TRUE,\n  eps=0.001, ERV=FALSE\n* Properties: -\n* Predict type: distr\n* Return type: Score\n\n\nCode\np$score(ibrier, task = task, train_set = part$train)\n\n\nsurv.graf \n0.1646881 \n\n\n\n\nUsing ML survival models\nMention from mlr3extralearners: cv.glmnet, aorsf, ranger, CoxBoost"
  },
  {
    "objectID": "index.html#example-gex-clinical-data",
    "href": "index.html#example-gex-clinical-data",
    "title": "Intro to Machine Learning for Survival Analysis with mlr3",
    "section": "Example: GEX + clinical data",
    "text": "Example: GEX + clinical data\n\nFrom the tutorial\nBenchmark + posthoc analysis of results"
  },
  {
    "objectID": "index.html#benchmark-example-gex-clinical-data",
    "href": "index.html#benchmark-example-gex-clinical-data",
    "title": "Intro to Machine Learning for Survival Analysis with mlr3",
    "section": "Benchmark example: GEX + clinical data",
    "text": "Benchmark example: GEX + clinical data\n\nFrom the tutorial (https://ocbe-uio.github.io/survomics/survomics.html#workflow)\ndata =&gt; https://github.com/ocbe-uio/survomics/blob/main/data.rds\nBenchmark + posthoc analysis of results with mlr3benchmark"
  }
]